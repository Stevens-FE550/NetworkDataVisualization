demo()
'demo()'
'help()'
install.packages("igraph")
library(igraph)
ls
read.graph(mognetwork.gml, format = c("gml"))
cd..
help(read.graph)
setwd hw2
help(setwd)
setwd(HW2)
setwd("~/Documents/Graduate School/Stevens Insistute of Technology/Courses/FE550-2015/HW2")
read.graph(mognetwork.gml, format = c("gml"))
help(read.graph)
read.graph("mognetwork.gml", format = c("gml"))
plot
help(plot)
plot(bsk.network)
plot("mognetwork.gml")
load("~/Documents/Graduate School/Stevens Insistute of Technology/Courses/FE550-2015/HW2/termDocMatrix.rdata")
termDocMatrix[5:10,1:20]
termDocMatrix[termDocMatrix.=1] <-1
termMatrix <- termDocMatrix %*% t(termDocMatrix)
termMatrix[5:10,5:10]
g <- graph.adjacency(termMatrix,weighted=T, mode="undirected")
#remove Loops
g <-simpligy(g)
g <- simplify(g)
V(g)$label <- V(g)$name
V(g)$dgree <- dgree(g)
V(g)$dgree <- V(g)$dgree(g)
V(g)$dgree <- degree(g)
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g,layout=layout1)
library(igraph)
setwd("~/Documents/Graduate School/Stevens Insistute of Technology/Courses/FE550-2015/HW2")
clear
source('~/.active-rstudio-document')
setwd("~/Documents/Graduate School/Stevens Insistute of Technology/Courses/FE550-2015/HW2")
> V(g)$dgree <- V(g)$dgree(g)
>
plot(g,layout=layout1)
change it
# data analysis of twitter text
#data analysis of twitter text
library(igraph)
#inspect matrix
termMatrix[5:10,5:10]
#build a graph
g <- graph.adjacency(termMatrix,weighted=T, mode="undirected")
#remove Loops
g <- simplify(g)
#set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$dgree <- degree(g)
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g,layout=layout1)
read.graph(mognetwork.gml, format = c("gml"))
read.graph("mognetwork.gml", format = c("gml"))
ls()
load("mognetwork.gml")
write.graph("mognetwork.gml", format = c("gml"))
mofile <- read.graph("mognetwork.gml", format = c("gml"))
edgelist = get.edgelist(mofile)
# get vertex labels
vlabels = get.vertex.attribute(mofile, "label")
# get vertex groups
vgroups = get.vertex.attribute(mofile, "group")
# get vertex fill color
vfill = get.vertex.attribute(mofile, "fill")
# get vertex border color
vborders = get.vertex.attribute(mofile, "border")
# get vertex degree
degrees = degree(mofile)
# get edges value
values = get.edge.attribute(mofile, "value")
library(reshape)
# install devtools
install.packages("devtools")
# load devtools
library(devtools)
# install arcdiagram
install_github('arcdiagram', username = 'gastonstat')
# load arcdiagram
library(arcdiagram)
library(reshape)
install.packages("reshape")
library(reshape)
# data frame with vgroups, degree, vlabels and ind
x = data.frame(vgroups, degrees, vlabels, ind = 1:vcount(mofile))
x = data.frame(vgroups, degrees, vlabels, ind = 1:vcount(mofile))
x = data.frame(vgroups, degrees, vlabels, ind = 0:vcount(mofile))
x = data.frame(vgroups, degrees, vlabels, ind = vcount(mofile))
# arranging by vgroups and degrees
y = arrange(x, desc(vgroups), desc(degrees))
help(arrange)
x = data.frame(vgroups, degrees, vlabels, vcount(mofile))
library(reshape2)
install.packages("reshape2")
library(reshape2)
vname = get.vertex.attribute(mofile, "label")
# get sex
vsex = get.vertex.attribute(mofile, "sex")
# get id
vid = get.vertex.attribute(mofile, "id")
# get arerank
vagerank = get.vertex.attribute(mofile, "agerank")
# get wallcount
vwallcount = get.vertex.attribute(mofile, "wallcount")
# get vertex degree
degrees = degree(mofile)
# get edges value
values = get.edge.attribute(mofile, "value")
# load reshape
library(reshape)
library(reshape2)
# data frame with vgroups, degree, vlabels and ind
x = data.frame(vgroups, degrees, vlabels, ind = 1:vcount(mofile))
x = data.frame(vsex, degrees, vname, vid)
# arranging by vgroups and degrees
y = arrange (x, desc(vgroups), desc(degrees))
y = arrange (x, desc(vsex), desc(degrees))
arrange (x, desc(vsex), desc(degrees))
install.packages("plyr")
y = arrange (x, desc(vsex), desc(degrees))
# get ordering 'ind'
new_ord = y$ind
library(reshape)
y = arrange (x, desc(vsex), desc(degrees))
arcplot(edgelist, ordering = new_ord, labels = vname, cex.labels = 0.8,
arcplot(edgelist, ordering = new_ord, labels = vname, cex.labels = 0.8,show.nodes = TRUE, col.nodes = vsex, bg.nodes = vid,cex.nodes = log(degrees) + 0.5, pch.nodes = 21, lwd.nodes = 2, line = -0.5,col.arcs = hsv(0, 0, 0.2, 0.25), lwd.arcs = 1.5 * values)
vsex <- v(mofile)$sex
table (vsex)
vsex[vsex=="female"]  <-  "circle"
vsex[vsex=="male"]  <- "square"
table(vsex)
vname <- v(mofile)$lable
vname <- V(mofile)$lable
table (vname)
vname <- v(mofile)$lable
# get Names
vname <- v(mofile)$lable
vname <- v(mofile)$lable
table (vname)
# wall posts count, assigning node size
nsize  <- (V(mofile)$wallcount/ max(V(mofile)$wallcount) + .1 )* 15
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
# get Names
vname <- V(mofile)$lable
table (vname)
# interface language, assigning colors
# interface language, assigning colors
cloc  <- V(f)$agerank
cloc  <- V(mofile)$agerank
table(cloc)
# wall posts count, assigning node size
nsize  <- (V(mofile)$wallcount/ max(V(mofile)$wallcount) + .1 )* 15
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
cloc[cloc %in% c("es_ES", "it_IT", "nl_NL", "en_GB", "gl_ES", "ko_KR")]  <-  "Yellow"
cloc[cloc %in% c("es_CL", "pt_BR","es_LA")]  <-  "Green"
cloc[cloc==c("en_US")]  <-  "Blue"
table(cloc)
# wall posts count, assigning node size
nsize  <- (V(mofile)$wallcount/ max(V(mofile)$wallcount) + .1 )* 15
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
graph.basic.stats(f)
mofile <- read.graph("mognetwork.gml", format = c("gml"))
#get Gender, assign Shapes
vsex <- v(mofile)$sex
table (vsex)
vsex[vsex=="female"]  <-  "circle"
vsex[vsex=="male"]  <- "square"
table(vsex)
# get Names
vname <- V(mofile)$lable
table (vname)
# interface language, assigning colors
cloc  <- V(mofile)$local
table(cloc)
cloc[cloc %in% c("es_ES", "it_IT", "nl_NL", "en_GB", "gl_ES", "ko_KR")]  <-  "Yellow"
cloc[cloc %in% c("es_CL", "pt_BR","es_LA")]  <-  "Green"
cloc[cloc==c("en_US")]  <-  "Blue"
table(cloc)
# wall posts count, assigning node size
nsize  <- (V(mofile)$wallcount/ max(V(mofile)$wallcount) + .1 )* 15
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
graph.basic.stats(f)
vsex <- V(mofile)$sex
table (vsex)
vsex[vsex=="female"]  <-  "circle"
vsex[vsex=="male"]  <- "square"
table(vsex)
# get Names
vname <- V(mofile)$lable
table (vname)
# interface language, assigning colors
cloc  <- V(mofile)$local
table(cloc)
mofile <- read.graph("mognetwork.gml", format = c("gml"))
mofile <- read.graph("mognetwork.gml", format = c("gml"))
#get Gender, assign Shapes
vsex <- V(mofile)$sex
table (vsex)
vsex[vsex=="female"]  <-  "circle"
vsex[vsex=="male"]  <- "square"
table(vsex)
# get Names
vname <- V(mofile)$lable
table (vname)
# interface language, assigning colors
cloc  <- V(mofile)$local
table(cloc)
library(igraph)
#load file
mofile <- read.graph("mognetwork.gml", format = c("gml"))
#get Gender, assign Shapes
vsex <- V(mofile)$sex
table (vsex)
vsex[vsex=="female"]  <-  "circle"
vsex[vsex=="male"]  <- "square"
table(vsex)
# get Names
vname <- V(mofile)$lable
table (vname)
# interface language, assigning colors
cloc  <- V(mofile)$local
table(cloc)
cloc  <- V(mofile)$locale
table(cloc)
cloc  <- V(mofile)$locale
table(cloc)
cloc[cloc %in% c("ar_AR")]  <-  "Yellow"
cloc[cloc %in% c("es_ES","es_LA")]  <-  "Green"
cloc[cloc %in% c("en_GB", "fr_FR")]  <-  "red"
cloc[cloc==c("en_US")]  <-  "Blue"
table(cloc)
# wall posts count, assigning node size
nsize  <- (V(mofile)$wallcount/ max(V(mofile)$wallcount) + .1 )* 15
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape="Cicle")
help("vertex")
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc,  vertex.shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc,  vertex.shapes=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc,  vertex.shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=label, vertex.size=nsize, vertex.color=cloc)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=vname, vertex.size=nsize, vertex.color=cloc)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc, vertex.shape=vsex)
plot(mofile, layout=layout.fruchterman.reingold, edge.arrow.size=.5, vertex.label=NA, vertex.size=nsize, vertex.color=cloc)
